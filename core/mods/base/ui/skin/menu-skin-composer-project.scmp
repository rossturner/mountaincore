{
atlasData: {
	atlasCurrent: true
	drawables: [
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/icon_discord.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: icon_discord
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/icon_twitch.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: icon_twitch
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/asset_bg_banner_pole.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: asset_bg_banner_pole
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: null
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: dropdown_body_colour
			name: dropdown_body
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: PIXEL
			hidden: false
		}
		{
			file: null
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: dropdown_body_hover_colour
			name: dropdown_body_hover
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: PIXEL
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/scroll_fg.9.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: scroll_fg
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: NINE_PATCH
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/scroll_bg.9.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: scroll_bg
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: NINE_PATCH
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/select_full.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: select_full
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/paper_texture_bg.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: paper_texture_bg
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/menu_bg_left.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: menu_bg_left
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/menu_bg_right.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: menu_bg_right
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/paper_texture_bg_pattern_large.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: paper_texture_bg_pattern_large
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/arrow_greyed_out.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: arrow_greyed_out
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/arrow.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: arrow
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: null
			bgColor: {
				r: 0
				g: 0
				b: 0
				a: 1
			}
			tint: null
			tintName: saved_greyed_out_bg_colour
			name: save_greyed_out_bg
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: PIXEL
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/arrow_right.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: arrow_right
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/arrow_greyed_out_right.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: arrow_greyed_out_right
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: null
			bgColor: {
				r: 0
				g: 0
				b: 0
				a: 1
			}
			tint: null
			tintName: btn_scalable_colour
			name: btn_scalable
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: PIXEL
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/save_title_ribbon_bg.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: save_title_ribbon_bg
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: null
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: dialog_bg_colour
			name: dialog_bg
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: PIXEL
			hidden: false
		}
		{
			file: null
			bgColor: {
				r: 0
				g: 0
				b: 0
				a: 1
			}
			tint: null
			tintName: dialog_stage_colour
			name: dialog_stage
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: PIXEL
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/title_ribbon_bg_mike.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: title_ribbon_bg_mike
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/title_ribbon_bg_mike.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: title_ribbon_bg_mike_10patch
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: {
				horizontalStretchAreas: {
					items: [ 266, 278 ]
					size: 2
					ordered: true
				}
				verticalStretchAreas: {
					items: []
					size: 0
					ordered: true
				}
				contentLeft: 266
				contentRight: 266
				contentTop: 3
				contentBottom: 37
				tile: false
				colorName: null
				color1Name: null
				color2Name: null
				color3Name: null
				color4Name: null
				offsetX: 0
				offsetY: 0
				offsetXspeed: 0
				offsetYspeed: 0
				frameDuration: 0.03
				regionNames: []
				playMode: 2
				crushMode: 0
			}
			tvgData: null
			type: TENPATCH
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/save_bg_scalable.9.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: save_bg_scalable
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: NINE_PATCH
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/selected_save_bg.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: selected_save_bg
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/asset_bg_banner.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: asset_bg_banner
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/btn_banner_1.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: btn_banner_1
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/btn_banner_2.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: btn_banner_2
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/btn_banner_3.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: btn_banner_3
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/btn_banner_4.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: btn_banner_4
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
		{
			file: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project_data/btn_banner_hover_state.png
			bgColor: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			tint: null
			tintName: null
			name: btn_banner_hover_state
			tiled: false
			minWidth: -1
			minHeight: -1
			customized: false
			tenPatchData: null
			tvgData: null
			type: TEXTURE
			hidden: false
		}
	]
	fontDrawables: []
}
jsonData: {
	colors: [
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.8235294
				g: 0.67058825
				b: 0.4509804
				a: 1
			}
			name: btn_scalable_colour
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.8235294
				g: 0.67058825
				b: 0.4509804
				a: 0.5
			}
			name: btn_scalable_colour_alpha_50pc
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.32156864
				g: 0.28235295
				b: 0.31764707
				a: 1
			}
			name: dialog_bg_colour
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 1
				g: 1
				b: 1
				a: 0.5898876
			}
			name: dialog_stage_colour
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.6431373
				g: 0.28627452
				b: 0.16078432
				a: 1
			}
			name: dropdown_body_colour
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.5686275
				g: 0.21176471
				b: 0.07450981
				a: 1
			}
			name: dropdown_body_hover_colour
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.5686275
				g: 0.21176471
				b: 0.078431375
				a: 1
			}
			name: primary_font_colour_red
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 1
				g: 0.81960785
				b: 0.44313726
				a: 1
			}
			name: primary_font_colour_yellow_alt
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 0.84313726
				g: 0.69411767
				b: 0.47843137
				a: 1
			}
			name: saved_greyed_out_bg_colour
		}
		{
			class: com.ray3k.skincomposer.data.ColorData
			color: {
				r: 1
				g: 1
				b: 1
				a: 1
			}
			name: white
		}
	]
	fonts: []
	freeTypeFonts: [
		{
			class: com.ray3k.skincomposer.data.FreeTypeFontData
			name: default-font-16
			previewTTF: IBMPlexSerif-Medium
			useCustomSerializer: false
			size: 16
			mono: false
			hinting: AutoMedium
			color: null
			gamma: 1.8
			renderCount: 2
			borderWidth: 0
			borderColor: null
			borderStraight: false
			borderGamma: 1.8
			shadowOffsetX: 0
			shadowOffsetY: 0
			shadowColor: null
			spaceX: 0
			spaceY: 0
			characters: ""
			kerning: true
			flip: false
			genMipMaps: false
			minFilter: Nearest
			magFilter: Nearest
			incremental: false
		}
		{
			class: com.ray3k.skincomposer.data.FreeTypeFontData
			name: default-font-23
			previewTTF: IBMPlexSerif-Medium
			useCustomSerializer: false
			size: 16
			mono: false
			hinting: AutoMedium
			color: null
			gamma: 1.8
			renderCount: 2
			borderWidth: 0
			borderColor: null
			borderStraight: false
			borderGamma: 1.8
			shadowOffsetX: 0
			shadowOffsetY: 0
			shadowColor: null
			spaceX: 0
			spaceY: 0
			characters: ""
			kerning: true
			flip: false
			genMipMaps: false
			minFilter: Nearest
			magFilter: Nearest
			incremental: false
		}
		{
			class: com.ray3k.skincomposer.data.FreeTypeFontData
			name: header-font-36
			previewTTF: IBMPlexSerif-Medium
			useCustomSerializer: false
			size: 16
			mono: false
			hinting: AutoMedium
			color: null
			gamma: 1.8
			renderCount: 2
			borderWidth: 0
			borderColor: null
			borderStraight: false
			borderGamma: 1.8
			shadowOffsetX: 0
			shadowOffsetY: 0
			shadowColor: null
			spaceX: 0
			spaceY: 0
			characters: ""
			kerning: true
			flip: false
			genMipMaps: false
			minFilter: Nearest
			magFilter: Nearest
			incremental: false
		}
		{
			class: com.ray3k.skincomposer.data.FreeTypeFontData
			name: header-font-47
			previewTTF: IBMPlexSerif-Medium
			useCustomSerializer: false
			size: 16
			mono: false
			hinting: AutoMedium
			color: null
			gamma: 1.8
			renderCount: 2
			borderWidth: 0
			borderColor: null
			borderStraight: false
			borderGamma: 1.8
			shadowOffsetX: 0
			shadowOffsetY: 0
			shadowColor: null
			spaceX: 0
			spaceY: 0
			characters: ""
			kerning: true
			flip: false
			genMipMaps: false
			minFilter: Nearest
			magFilter: Nearest
			incremental: false
		}
		{
			class: com.ray3k.skincomposer.data.FreeTypeFontData
			name: header-font-50
			previewTTF: IBMPlexSerif-Medium
			useCustomSerializer: false
			size: 16
			mono: false
			hinting: AutoMedium
			color: null
			gamma: 1.8
			renderCount: 2
			borderWidth: 0
			borderColor: null
			borderStraight: false
			borderGamma: 1.8
			shadowOffsetX: 0
			shadowOffsetY: 0
			shadowColor: null
			spaceX: 0
			spaceY: 0
			characters: ""
			kerning: true
			flip: false
			genMipMaps: false
			minFilter: Nearest
			magFilter: Nearest
			incremental: false
		}
		{
			class: com.ray3k.skincomposer.data.FreeTypeFontData
			name: header-font-65
			previewTTF: IBMPlexSerif-Medium
			useCustomSerializer: false
			size: 16
			mono: false
			hinting: AutoMedium
			color: null
			gamma: 1.8
			renderCount: 2
			borderWidth: 0
			borderColor: null
			borderStraight: false
			borderGamma: 1.8
			shadowOffsetX: 0
			shadowOffsetY: 0
			shadowColor: null
			spaceX: 0
			spaceY: 0
			characters: ""
			kerning: true
			flip: false
			genMipMaps: false
			minFilter: Nearest
			magFilter: Nearest
			incremental: false
		}
		{
			class: com.ray3k.skincomposer.data.FreeTypeFontData
			name: placeholder-font
			previewTTF: IBMPlexSerif-Medium
			useCustomSerializer: false
			size: 16
			mono: false
			hinting: AutoMedium
			color: null
			gamma: 1.8
			renderCount: 2
			borderWidth: 0
			borderColor: null
			borderStraight: false
			borderGamma: 1.8
			shadowOffsetX: 0
			shadowOffsetY: 0
			shadowColor: null
			spaceX: 0
			spaceY: 0
			characters: ""
			kerning: true
			flip: false
			genMipMaps: false
			minFilter: Nearest
			magFilter: Nearest
			incremental: false
		}
		{
			class: com.ray3k.skincomposer.data.FreeTypeFontData
			name: placeholder-header-font
			previewTTF: PressStart2P-Regular
			useCustomSerializer: false
			size: 16
			mono: false
			hinting: AutoMedium
			color: null
			gamma: 1.8
			renderCount: 2
			borderWidth: 0
			borderColor: null
			borderStraight: false
			borderGamma: 1.8
			shadowOffsetX: 0
			shadowOffsetY: 0
			shadowColor: null
			spaceX: 0
			spaceY: 0
			characters: ""
			kerning: true
			flip: false
			genMipMaps: false
			minFilter: Nearest
			magFilter: Nearest
			incremental: false
		}
	]
	classStyleMap: {
		com.badlogic.gdx.scenes.scene2d.ui.SelectBox: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.SelectBox
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: default-font-16
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: false
						value: white
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: select_full
					}
					scrollStyle: {
						type: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane$ScrollPaneStyle
						name: scrollStyle
						optional: false
						value: default
					}
					listStyle: {
						type: com.badlogic.gdx.scenes.scene2d.ui.List$ListStyle
						name: listStyle
						optional: false
						value: default
					}
					backgroundOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundOver
						optional: true
						value: null
					}
					backgroundOpen: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundOpen
						optional: true
						value: null
					}
					backgroundDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: backgroundDisabled
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ImageTextButton
				properties: {
					imageUp: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageUp
						optional: true
						value: null
					}
					imageDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageDown
						optional: true
						value: null
					}
					imageOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageOver
						optional: true
						value: null
					}
					imageChecked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageChecked
						optional: true
						value: null
					}
					imageCheckedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageCheckedOver
						optional: true
						value: null
					}
					imageDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageDisabled
						optional: true
						value: null
					}
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: primary_font_colour_red
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Button: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Button
				properties: {
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: left_arrow
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Button
				properties: {
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: arrow
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: arrow_greyed_out
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: right_arrow
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Button
				properties: {
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: arrow_right
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: arrow_greyed_out_right
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.ScrollPane: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					corner: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: corner
						optional: true
						value: null
					}
					hScroll: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: hScroll
						optional: true
						value: scroll_bg
					}
					hScrollKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: hScrollKnob
						optional: true
						value: scroll_fg
					}
					vScroll: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: vScroll
						optional: true
						value: scroll_bg
					}
					vScrollKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: vScrollKnob
						optional: true
						value: scroll_fg
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: list
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					corner: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: corner
						optional: true
						value: null
					}
					hScroll: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: hScroll
						optional: true
						value: null
					}
					hScrollKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: hScrollKnob
						optional: true
						value: null
					}
					vScroll: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: vScroll
						optional: true
						value: null
					}
					vScrollKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: vScrollKnob
						optional: true
						value: null
					}
				}
				deletable: true
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: select-box
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ScrollPane
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					corner: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: corner
						optional: true
						value: null
					}
					hScroll: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: hScroll
						optional: true
						value: null
					}
					hScrollKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: hScrollKnob
						optional: true
						value: null
					}
					vScroll: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: vScroll
						optional: true
						value: null
					}
					vScrollKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: vScrollKnob
						optional: true
						value: null
					}
				}
				deletable: true
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.ProgressBar: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-horizontal
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ProgressBar
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: false
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
					disabledKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnob
						optional: true
						value: null
					}
					knobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBefore
						optional: true
						value: null
					}
					knobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfter
						optional: true
						value: null
					}
					disabledKnobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobBefore
						optional: true
						value: null
					}
					disabledKnobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobAfter
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-vertical
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ProgressBar
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: false
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
					disabledKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnob
						optional: true
						value: null
					}
					knobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBefore
						optional: true
						value: null
					}
					knobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfter
						optional: true
						value: null
					}
					disabledKnobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobBefore
						optional: true
						value: null
					}
					disabledKnobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobAfter
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.CheckBox: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.CheckBox
				properties: {
					checkboxOn: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOn
						optional: false
						value: null
					}
					checkboxOff: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOff
						optional: false
						value: null
					}
					checkboxOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOver
						optional: true
						value: null
					}
					checkboxOnDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOnDisabled
						optional: true
						value: null
					}
					checkboxOffDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOffDisabled
						optional: true
						value: null
					}
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: radio
				clazz: com.badlogic.gdx.scenes.scene2d.ui.CheckBox
				properties: {
					checkboxOn: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOn
						optional: false
						value: null
					}
					checkboxOff: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOff
						optional: false
						value: null
					}
					checkboxOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOver
						optional: true
						value: null
					}
					checkboxOnDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOnDisabled
						optional: true
						value: null
					}
					checkboxOffDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkboxOffDisabled
						optional: true
						value: null
					}
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Window: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Window
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: dialog_bg
					}
					titleFont: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: titleFont
						optional: false
						value: placeholder-font
					}
					titleFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: titleFontColor
						optional: true
						value: white
					}
					stageBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: stageBackground
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: dialog
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Window
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					titleFont: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: titleFont
						optional: false
						value: null
					}
					titleFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: titleFontColor
						optional: true
						value: null
					}
					stageBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: stageBackground
						optional: true
						value: null
					}
				}
				deletable: true
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.TextField: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextField
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: false
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					focusedBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focusedBackground
						optional: true
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					cursor: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: cursor
						optional: true
						value: null
					}
					selection: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: selection
						optional: true
						value: null
					}
					messageFont: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: messageFont
						optional: true
						value: null
					}
					messageFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: messageFontColor
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: small
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextField
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: null
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: false
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					focusedBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focusedBackground
						optional: true
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					cursor: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: cursor
						optional: true
						value: null
					}
					selection: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: selection
						optional: true
						value: null
					}
					messageFont: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: messageFont
						optional: true
						value: null
					}
					messageFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: messageFontColor
						optional: true
						value: null
					}
				}
				deletable: true
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Label: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Label
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-header-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: primary_font_colour_red
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: white_text
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Label
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: white
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
				}
				deletable: true
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: save_title_ribbon
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Label
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-36
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: primary_font_colour_yellow_alt
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: save_title_ribbon_bg
					}
				}
				deletable: true
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: title_ribbon
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Label
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-65
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: primary_font_colour_red
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: title_ribbon_bg_mike_10patch
					}
				}
				deletable: true
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: white_text_default-font-23
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Label
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: default-font-23
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: white
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
				}
				deletable: true
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.TextButton: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: primary_font_colour_red
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_1
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-header-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: btn_banner_1
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: btn_banner_hover_state
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: default
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_2
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-header-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: btn_banner_2
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: btn_banner_hover_state
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: default
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_3
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-header-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: btn_banner_3
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: btn_banner_hover_state
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: default
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_4
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-header-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: btn_banner_4
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: btn_banner_hover_state
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: default
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_scalable
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: placeholder-font
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: primary_font_colour_red
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: btn_scalable
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_scalable_header-font-50
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-50
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: btn_scalable
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_1_header-font-47
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-47
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: btn_banner_1
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_2_header-font-47
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-47
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: btn_banner_2
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_3_header-font-36
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-36
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: btn_banner_3
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_3_header-font-47
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-47
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: btn_banner_3
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_4_header-font-36
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-36
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: btn_banner_4
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: btn_banner_4_header-font-47
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextButton
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: header-font-47
					}
					fontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColor
						optional: true
						value: null
					}
					downFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: downFontColor
						optional: true
						value: null
					}
					overFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: overFontColor
						optional: true
						value: null
					}
					focusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: focusedFontColor
						optional: true
						value: null
					}
					disabledFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: disabledFontColor
						optional: true
						value: null
					}
					checkedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFontColor
						optional: true
						value: null
					}
					checkedDownFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedDownFontColor
						optional: true
						value: null
					}
					checkedOverFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedOverFontColor
						optional: true
						value: null
					}
					checkedFocusedFontColor: {
						type: com.badlogic.gdx.graphics.Color
						name: checkedFocusedFontColor
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					focused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: focused
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					checkedDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedDown
						optional: true
						value: null
					}
					checkedFocused: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedFocused
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: true
				parent: btn_banner_4
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Touchpad: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Touchpad
				properties: {
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.ImageButton: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.ImageButton
				properties: {
					imageUp: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageUp
						optional: true
						value: null
					}
					imageDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageDown
						optional: true
						value: null
					}
					imageOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageOver
						optional: true
						value: null
					}
					imageChecked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageChecked
						optional: true
						value: null
					}
					imageCheckedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageCheckedOver
						optional: true
						value: null
					}
					imageDisabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: imageDisabled
						optional: true
						value: null
					}
					up: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: up
						optional: true
						value: null
					}
					down: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: down
						optional: true
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					checked: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checked
						optional: true
						value: null
					}
					checkedOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: checkedOver
						optional: true
						value: null
					}
					disabled: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabled
						optional: true
						value: null
					}
					pressedOffsetX: {
						type: float
						name: pressedOffsetX
						optional: true
						value: 0
					}
					pressedOffsetY: {
						type: float
						name: pressedOffsetY
						optional: true
						value: 0
					}
					unpressedOffsetX: {
						type: float
						name: unpressedOffsetX
						optional: true
						value: 0
					}
					unpressedOffsetY: {
						type: float
						name: unpressedOffsetY
						optional: true
						value: 0
					}
					checkedOffsetX: {
						type: float
						name: checkedOffsetX
						optional: true
						value: 0
					}
					checkedOffsetY: {
						type: float
						name: checkedOffsetY
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.List: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.List
				properties: {
					font: {
						type: com.badlogic.gdx.graphics.g2d.BitmapFont
						name: font
						optional: false
						value: default-font-16
					}
					fontColorSelected: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColorSelected
						optional: false
						value: primary_font_colour_yellow_alt
					}
					fontColorUnselected: {
						type: com.badlogic.gdx.graphics.Color
						name: fontColorUnselected
						optional: false
						value: white
					}
					selection: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: selection
						optional: false
						value: dropdown_body_hover
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: dropdown_body
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.TextTooltip: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.TextTooltip
				properties: {
					label: {
						type: com.badlogic.gdx.scenes.scene2d.ui.Label$LabelStyle
						name: label
						optional: false
						value: default
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
					wrapWidth: {
						type: float
						name: wrapWidth
						optional: true
						value: 0
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Tree: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Tree
				properties: {
					plus: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: plus
						optional: false
						value: null
					}
					minus: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: minus
						optional: false
						value: null
					}
					over: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: over
						optional: true
						value: null
					}
					selection: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: selection
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.Slider: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-horizontal
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Slider
				properties: {
					knobOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobOver
						optional: true
						value: null
					}
					knobDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobDown
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: false
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
					disabledKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnob
						optional: true
						value: null
					}
					knobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBefore
						optional: true
						value: null
					}
					knobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfter
						optional: true
						value: null
					}
					disabledKnobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobBefore
						optional: true
						value: null
					}
					disabledKnobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobAfter
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-vertical
				clazz: com.badlogic.gdx.scenes.scene2d.ui.Slider
				properties: {
					knobOver: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobOver
						optional: true
						value: null
					}
					knobDown: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobDown
						optional: true
						value: null
					}
					background: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: background
						optional: false
						value: null
					}
					disabledBackground: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledBackground
						optional: true
						value: null
					}
					knob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knob
						optional: true
						value: null
					}
					disabledKnob: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnob
						optional: true
						value: null
					}
					knobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobBefore
						optional: true
						value: null
					}
					knobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: knobAfter
						optional: true
						value: null
					}
					disabledKnobBefore: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobBefore
						optional: true
						value: null
					}
					disabledKnobAfter: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: disabledKnobAfter
						optional: true
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
		com.badlogic.gdx.scenes.scene2d.ui.SplitPane: [
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-horizontal
				clazz: com.badlogic.gdx.scenes.scene2d.ui.SplitPane
				properties: {
					handle: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: handle
						optional: false
						value: null
					}
				}
				deletable: false
				parent: null
			}
			{
				class: com.ray3k.skincomposer.data.StyleData
				name: default-vertical
				clazz: com.badlogic.gdx.scenes.scene2d.ui.SplitPane
				properties: {
					handle: {
						type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
						name: handle
						optional: false
						value: null
					}
				}
				deletable: false
				parent: null
			}
		]
	}
	customClasses: [
		{
			fullyQualifiedName: com.kotcrab.vis.ui.Sizes
			displayName: Sizes
			styles: [
				{
					name: default
					properties: [
						{
							name: scaleFactor
							type: NUMBER
							value: 1
						}
						{
							name: spacingBottom
							type: NUMBER
							value: 8
						}
						{
							name: spacingRight
							type: NUMBER
							value: 6
						}
						{
							name: buttonBarSpacing
							type: NUMBER
							value: 10
						}
						{
							name: menuItemIconSize
							type: NUMBER
							value: 22
						}
						{
							name: borderSize
							type: NUMBER
							value: 1
						}
						{
							name: spinnerButtonHeight
							type: NUMBER
							value: 12
						}
						{
							name: spinnerFieldSize
							type: NUMBER
							value: 50
						}
						{
							name: fileChooserViewModeBigIconsSize
							type: NUMBER
							value: 200
						}
						{
							name: fileChooserViewModeMediumIconsSize
							type: NUMBER
							value: 128
						}
						{
							name: fileChooserViewModeSmallIconsSize
							type: NUMBER
							value: 64
						}
						{
							name: fileChooserViewModeListWidthSize
							type: NUMBER
							value: 150
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: scaleFactor
						type: NUMBER
						value: null
					}
					{
						name: spacingBottom
						type: NUMBER
						value: null
					}
					{
						name: spacingRight
						type: NUMBER
						value: null
					}
					{
						name: buttonBarSpacing
						type: NUMBER
						value: null
					}
					{
						name: menuItemIconSize
						type: NUMBER
						value: null
					}
					{
						name: borderSize
						type: NUMBER
						value: null
					}
					{
						name: spinnerButtonHeight
						type: NUMBER
						value: null
					}
					{
						name: spinnerFieldSize
						type: NUMBER
						value: null
					}
					{
						name: fileChooserViewModeBigIconsSize
						type: NUMBER
						value: null
					}
					{
						name: fileChooserViewModeMediumIconsSize
						type: NUMBER
						value: null
					}
					{
						name: fileChooserViewModeSmallIconsSize
						type: NUMBER
						value: null
					}
					{
						name: fileChooserViewModeListWidthSize
						type: NUMBER
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.VisTextField$VisTextFieldStyle
			displayName: VisTextFieldStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: errorBorder
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: COLOR
							value: null
						}
						{
							name: selection
							type: DRAWABLE
							value: null
						}
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: backgroundOver
							type: DRAWABLE
							value: null
						}
						{
							name: cursor
							type: DRAWABLE
							value: null
						}
						{
							name: focusedFontColor
							type: COLOR
							value: null
						}
						{
							name: focusedBackground
							type: DRAWABLE
							value: null
						}
						{
							name: disabledBackground
							type: DRAWABLE
							value: null
						}
						{
							name: messageFont
							type: FONT
							value: null
						}
						{
							name: messageFontColor
							type: COLOR
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: focusBorder
						type: DRAWABLE
						value: null
					}
					{
						name: errorBorder
						type: DRAWABLE
						value: null
					}
					{
						name: font
						type: FONT
						value: null
					}
					{
						name: fontColor
						type: COLOR
						value: null
					}
					{
						name: disabledFontColor
						type: COLOR
						value: null
					}
					{
						name: selection
						type: DRAWABLE
						value: null
					}
					{
						name: background
						type: DRAWABLE
						value: null
					}
					{
						name: backgroundOver
						type: DRAWABLE
						value: null
					}
					{
						name: cursor
						type: DRAWABLE
						value: null
					}
					{
						name: focusedFontColor
						type: COLOR
						value: null
					}
					{
						name: focusedBackground
						type: DRAWABLE
						value: null
					}
					{
						name: disabledBackground
						type: DRAWABLE
						value: null
					}
					{
						name: messageFont
						type: FONT
						value: null
					}
					{
						name: messageFontColor
						type: COLOR
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.VisTextButton$VisTextButtonStyle
			displayName: VisTextButtonStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: COLOR
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: downFontColor
							type: COLOR
							value: null
						}
						{
							name: overFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOverFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
				{
					name: menu
					properties: [
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: COLOR
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: downFontColor
							type: COLOR
							value: null
						}
						{
							name: overFontColor
							type: FONT
							value: null
						}
						{
							name: checkedFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOverFontColor
							type: FONT
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: true
				}
				{
					name: toggle
					properties: [
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: COLOR
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: downFontColor
							type: COLOR
							value: null
						}
						{
							name: overFontColor
							type: FONT
							value: null
						}
						{
							name: checkedFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOverFontColor
							type: FONT
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: true
				}
				{
					name: tab
					properties: [
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: COLOR
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: downFontColor
							type: COLOR
							value: null
						}
						{
							name: overFontColor
							type: FONT
							value: null
						}
						{
							name: checkedFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOverFontColor
							type: FONT
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: true
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: focusBorder
						type: DRAWABLE
						value: null
					}
					{
						name: down
						type: DRAWABLE
						value: null
					}
					{
						name: up
						type: DRAWABLE
						value: null
					}
					{
						name: over
						type: DRAWABLE
						value: null
					}
					{
						name: disabled
						type: DRAWABLE
						value: null
					}
					{
						name: font
						type: FONT
						value: null
					}
					{
						name: fontColor
						type: COLOR
						value: null
					}
					{
						name: disabledFontColor
						type: COLOR
						value: null
					}
					{
						name: checked
						type: DRAWABLE
						value: null
					}
					{
						name: downFontColor
						type: COLOR
						value: null
					}
					{
						name: overFontColor
						type: FONT
						value: null
					}
					{
						name: checkedFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedOverFontColor
						type: FONT
						value: null
					}
					{
						name: checkedOver
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.VisImageButton$VisImageButtonStyle
			displayName: VisImageButtonStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: false
				}
				{
					name: close-window
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
				{
					name: arrow-1
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
				{
					name: arrow-2
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
				{
					name: rect
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
				{
					name: pencil
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
				{
					name: brush
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
				{
					name: close-active-tab
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
				{
					name: close
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: down
						type: DRAWABLE
						value: null
					}
					{
						name: up
						type: DRAWABLE
						value: null
					}
					{
						name: over
						type: DRAWABLE
						value: null
					}
					{
						name: disabled
						type: DRAWABLE
						value: null
					}
					{
						name: focusBorder
						type: DRAWABLE
						value: null
					}
					{
						name: checked
						type: DRAWABLE
						value: null
					}
					{
						name: imageUp
						type: DRAWABLE
						value: null
					}
					{
						name: imageDown
						type: DRAWABLE
						value: null
					}
					{
						name: imageOver
						type: DRAWABLE
						value: null
					}
					{
						name: imageChecked
						type: DRAWABLE
						value: null
					}
					{
						name: imageCheckedOver
						type: DRAWABLE
						value: null
					}
					{
						name: imageDisabled
						type: DRAWABLE
						value: null
					}
					{
						name: checkedOver
						type: DRAWABLE
						value: null
					}
					{
						name: pressedOffsetX
						type: NUMBER
						value: null
					}
					{
						name: pressedOffsetY
						type: NUMBER
						value: null
					}
					{
						name: unpressedOffsetX
						type: NUMBER
						value: null
					}
					{
						name: unpressedOffsetY
						type: NUMBER
						value: null
					}
					{
						name: checkedOffsetX
						type: NUMBER
						value: null
					}
					{
						name: checkedOffsetY
						type: NUMBER
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.VisImageTextButton$VisImageTextButtonStyle
			displayName: VisImageTextButtonStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: COLOR
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: imageUp
							type: DRAWABLE
							value: null
						}
						{
							name: imageDown
							type: DRAWABLE
							value: null
						}
						{
							name: imageOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageChecked
							type: DRAWABLE
							value: null
						}
						{
							name: imageCheckedOver
							type: DRAWABLE
							value: null
						}
						{
							name: imageDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: downFontColor
							type: COLOR
							value: null
						}
						{
							name: overFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOverFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: down
						type: DRAWABLE
						value: null
					}
					{
						name: up
						type: DRAWABLE
						value: null
					}
					{
						name: over
						type: DRAWABLE
						value: null
					}
					{
						name: disabled
						type: DRAWABLE
						value: null
					}
					{
						name: font
						type: FONT
						value: null
					}
					{
						name: fontColor
						type: COLOR
						value: null
					}
					{
						name: disabledFontColor
						type: COLOR
						value: null
					}
					{
						name: focusBorder
						type: DRAWABLE
						value: null
					}
					{
						name: checked
						type: DRAWABLE
						value: null
					}
					{
						name: imageUp
						type: DRAWABLE
						value: null
					}
					{
						name: imageDown
						type: DRAWABLE
						value: null
					}
					{
						name: imageOver
						type: DRAWABLE
						value: null
					}
					{
						name: imageChecked
						type: DRAWABLE
						value: null
					}
					{
						name: imageCheckedOver
						type: DRAWABLE
						value: null
					}
					{
						name: imageDisabled
						type: DRAWABLE
						value: null
					}
					{
						name: downFontColor
						type: COLOR
						value: null
					}
					{
						name: overFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedOverFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedOver
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.VisCheckBox$VisCheckBoxStyle
			displayName: VisCheckBoxStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: checkBackground
							type: DRAWABLE
							value: null
						}
						{
							name: checkBackgroundOver
							type: DRAWABLE
							value: null
						}
						{
							name: checkBackgroundDown
							type: DRAWABLE
							value: null
						}
						{
							name: tick
							type: DRAWABLE
							value: null
						}
						{
							name: tickDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: errorBorder
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: DRAWABLE
							value: null
						}
						{
							name: downFontColor
							type: COLOR
							value: null
						}
						{
							name: overFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOverFontColor
							type: COLOR
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: false
				}
				{
					name: radio
					properties: [
						{
							name: checkBackground
							type: DRAWABLE
							value: null
						}
						{
							name: checkBackgroundOver
							type: DRAWABLE
							value: null
						}
						{
							name: checkBackgroundDown
							type: DRAWABLE
							value: null
						}
						{
							name: tick
							type: DRAWABLE
							value: null
						}
						{
							name: tickDisabled
							type: DRAWABLE
							value: null
						}
						{
							name: focusBorder
							type: DRAWABLE
							value: null
						}
						{
							name: errorBorder
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: DRAWABLE
							value: null
						}
						{
							name: downFontColor
							type: COLOR
							value: null
						}
						{
							name: overFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOverFontColor
							type: COLOR
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: pressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: pressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: unpressedOffsetY
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetX
							type: NUMBER
							value: null
						}
						{
							name: checkedOffsetY
							type: NUMBER
							value: null
						}
					]
					deletable: true
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: checkBackground
						type: DRAWABLE
						value: null
					}
					{
						name: checkBackgroundOver
						type: DRAWABLE
						value: null
					}
					{
						name: checkBackgroundDown
						type: DRAWABLE
						value: null
					}
					{
						name: tick
						type: DRAWABLE
						value: null
					}
					{
						name: tickDisabled
						type: DRAWABLE
						value: null
					}
					{
						name: focusBorder
						type: DRAWABLE
						value: null
					}
					{
						name: errorBorder
						type: DRAWABLE
						value: null
					}
					{
						name: font
						type: FONT
						value: null
					}
					{
						name: fontColor
						type: COLOR
						value: null
					}
					{
						name: disabledFontColor
						type: DRAWABLE
						value: null
					}
					{
						name: downFontColor
						type: COLOR
						value: null
					}
					{
						name: overFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedOverFontColor
						type: COLOR
						value: null
					}
					{
						name: up
						type: DRAWABLE
						value: null
					}
					{
						name: down
						type: DRAWABLE
						value: null
					}
					{
						name: over
						type: DRAWABLE
						value: null
					}
					{
						name: checked
						type: DRAWABLE
						value: null
					}
					{
						name: checkedOver
						type: DRAWABLE
						value: null
					}
					{
						name: disabled
						type: DRAWABLE
						value: null
					}
					{
						name: pressedOffsetX
						type: NUMBER
						value: null
					}
					{
						name: pressedOffsetY
						type: NUMBER
						value: null
					}
					{
						name: unpressedOffsetX
						type: NUMBER
						value: null
					}
					{
						name: unpressedOffsetY
						type: NUMBER
						value: null
					}
					{
						name: checkedOffsetX
						type: NUMBER
						value: null
					}
					{
						name: checkedOffsetY
						type: NUMBER
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.PopupMenu$PopupMenuStyle
			displayName: PopupMenuStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: border
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: background
						type: DRAWABLE
						value: null
					}
					{
						name: border
						type: TEXT
						value: null
					}
					{
						name: border
						type: DRAWABLE
						value: null
					}
					{
						name: border
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.Menu$MenuStyle
			displayName: MenuStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: openButtonStyle
							type: TEXT
							value: ""
						}
						{
							name: border
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: background
						type: DRAWABLE
						value: null
					}
					{
						name: border
						type: DRAWABLE
						value: null
					}
					{
						name: openButtonStyle
						type: TEXT
						value: null
					}
					{
						name: border
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.MenuBar$MenuBarStyle
			displayName: MenuBarStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: background
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.Separator$SeparatorStyle
			displayName: SeparatorStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: thickness
							type: NUMBER
							value: 4
						}
					]
					deletable: false
				}
				{
					name: menu
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: thickness
							type: NUMBER
							value: 1
						}
					]
					deletable: true
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: background
						type: DRAWABLE
						value: null
					}
					{
						name: thickness
						type: NUMBER
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.VisSplitPane$VisSplitPaneStyle
			displayName: VisSplitPaneStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: handle
							type: DRAWABLE
							value: null
						}
						{
							name: handleOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
				{
					name: default-vertical
					properties: [
						{
							name: handle
							type: DRAWABLE
							value: null
						}
						{
							name: handleOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: true
				}
				{
					name: default-horizontal
					properties: [
						{
							name: handle
							type: DRAWABLE
							value: null
						}
						{
							name: handleOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: true
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: handle
						type: DRAWABLE
						value: null
					}
					{
						name: handleOver
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.MultiSplitPane$MultiSplitPaneStyle
			displayName: MultiSplitPaneStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: handle
							type: DRAWABLE
							value: null
						}
						{
							name: handleOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
				{
					name: default-horizontal
					properties: [
						{
							name: handle
							type: DRAWABLE
							value: null
						}
						{
							name: handleOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: true
				}
				{
					name: default-vertical
					properties: [
						{
							name: handle
							type: DRAWABLE
							value: null
						}
						{
							name: handleOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: true
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: handle
						type: DRAWABLE
						value: null
					}
					{
						name: handleOver
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.MenuItem$MenuItemStyle
			displayName: MenuItemStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: subMenu
							type: DRAWABLE
							value: null
						}
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
						{
							name: over
							type: DRAWABLE
							value: null
						}
						{
							name: disabled
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: disabledFontColor
							type: COLOR
							value: null
						}
						{
							name: checked
							type: DRAWABLE
							value: null
						}
						{
							name: downFontColor
							type: COLOR
							value: null
						}
						{
							name: overFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOverFontColor
							type: COLOR
							value: null
						}
						{
							name: checkedOver
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: subMenu
						type: DRAWABLE
						value: null
					}
					{
						name: down
						type: DRAWABLE
						value: null
					}
					{
						name: up
						type: DRAWABLE
						value: null
					}
					{
						name: over
						type: DRAWABLE
						value: null
					}
					{
						name: disabled
						type: DRAWABLE
						value: null
					}
					{
						name: font
						type: FONT
						value: null
					}
					{
						name: fontColor
						type: COLOR
						value: null
					}
					{
						name: disabledFontColor
						type: COLOR
						value: null
					}
					{
						name: checked
						type: DRAWABLE
						value: null
					}
					{
						name: downFontColor
						type: COLOR
						value: null
					}
					{
						name: overFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedOverFontColor
						type: COLOR
						value: null
					}
					{
						name: checkedOver
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.Tooltip$TooltipStyle
			displayName: TooltipStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: background
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.LinkLabel$LinkLabelStyle
			displayName: LinkLabelStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: fontColor
							type: COLOR
							value: null
						}
						{
							name: underline
							type: DRAWABLE
							value: null
						}
						{
							name: font
							type: FONT
							value: null
						}
						{
							name: background
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: fontColor
						type: COLOR
						value: null
					}
					{
						name: underline
						type: DRAWABLE
						value: null
					}
					{
						name: font
						type: FONT
						value: null
					}
					{
						name: background
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.tabbedpane.TabbedPane$TabbedPaneStyle
			displayName: TabbedPaneStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: separatorBar
							type: DRAWABLE
							value: null
						}
						{
							name: buttonStyle
							type: TEXT
							value: ""
						}
						{
							name: vertical
							type: BOOL
							value: false
						}
						{
							name: draggable
							type: BOOL
							value: false
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: background
						type: DRAWABLE
						value: null
					}
					{
						name: separatorBar
						type: DRAWABLE
						value: null
					}
					{
						name: buttonStyle
						type: TEXT
						value: ""
					}
					{
						name: vertical
						type: BOOL
						value: false
					}
					{
						name: draggable
						type: BOOL
						value: false
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.spinner.Spinner$SpinnerStyle
			displayName: SpinnerStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: down
							type: DRAWABLE
							value: null
						}
						{
							name: up
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: down
						type: DRAWABLE
						value: null
					}
					{
						name: up
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.file.FileChooserStyle
			displayName: FileChooserStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: highlight
							type: DRAWABLE
							value: null
						}
						{
							name: popupMenuStyle
							type: TEXT
							value: ""
						}
						{
							name: iconArrowLeft
							type: DRAWABLE
							value: null
						}
						{
							name: iconArrowRight
							type: DRAWABLE
							value: null
						}
						{
							name: iconFolder
							type: DRAWABLE
							value: null
						}
						{
							name: iconFolderParent
							type: DRAWABLE
							value: null
						}
						{
							name: iconFolderNew
							type: DRAWABLE
							value: null
						}
						{
							name: iconDrive
							type: DRAWABLE
							value: null
						}
						{
							name: iconFolderStar
							type: DRAWABLE
							value: null
						}
						{
							name: iconTrash
							type: DRAWABLE
							value: null
						}
						{
							name: iconStar
							type: DRAWABLE
							value: null
						}
						{
							name: iconStarOutline
							type: DRAWABLE
							value: null
						}
						{
							name: iconRefresh
							type: DRAWABLE
							value: null
						}
						{
							name: iconFileText
							type: DRAWABLE
							value: null
						}
						{
							name: iconFileImage
							type: DRAWABLE
							value: null
						}
						{
							name: iconFilePdf
							type: DRAWABLE
							value: null
						}
						{
							name: iconFileAudio
							type: DRAWABLE
							value: null
						}
						{
							name: iconListSettings
							type: DRAWABLE
							value: null
						}
						{
							name: contextMenuSelectedItem
							type: DRAWABLE
							value: null
						}
						{
							name: expandDropdown
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: highlight
						type: DRAWABLE
						value: null
					}
					{
						name: popupMenuStyle
						type: TEXT
						value: null
					}
					{
						name: iconArrowLeft
						type: DRAWABLE
						value: null
					}
					{
						name: iconArrowRight
						type: DRAWABLE
						value: null
					}
					{
						name: iconFolder
						type: DRAWABLE
						value: null
					}
					{
						name: iconFolderParent
						type: DRAWABLE
						value: null
					}
					{
						name: iconFolderNew
						type: DRAWABLE
						value: null
					}
					{
						name: iconDrive
						type: DRAWABLE
						value: null
					}
					{
						name: iconFolderStar
						type: DRAWABLE
						value: null
					}
					{
						name: iconTrash
						type: DRAWABLE
						value: null
					}
					{
						name: iconStar
						type: DRAWABLE
						value: null
					}
					{
						name: iconStarOutline
						type: DRAWABLE
						value: null
					}
					{
						name: iconRefresh
						type: DRAWABLE
						value: null
					}
					{
						name: iconFileText
						type: DRAWABLE
						value: null
					}
					{
						name: iconFileImage
						type: DRAWABLE
						value: null
					}
					{
						name: iconFilePdf
						type: DRAWABLE
						value: null
					}
					{
						name: iconFileAudio
						type: DRAWABLE
						value: null
					}
					{
						name: iconListSettings
						type: DRAWABLE
						value: null
					}
					{
						name: contextMenuSelectedItem
						type: DRAWABLE
						value: null
					}
					{
						name: expandDropdown
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.color.ColorPickerWidgetStyle
			displayName: ColorPickerWidgetStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: barSelector
							type: DRAWABLE
							value: null
						}
						{
							name: cross
							type: DRAWABLE
							value: null
						}
						{
							name: iconArrowRight
							type: DRAWABLE
							value: null
						}
						{
							name: verticalSelector
							type: DRAWABLE
							value: null
						}
						{
							name: horizontalSelector
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: barSelector
						type: DRAWABLE
						value: null
					}
					{
						name: cross
						type: DRAWABLE
						value: null
					}
					{
						name: iconArrowRight
						type: DRAWABLE
						value: null
					}
					{
						name: verticalSelector
						type: DRAWABLE
						value: null
					}
					{
						name: horizontalSelector
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.color.ColorPickerStyle
			displayName: ColorPickerStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: titleFont
							type: FONT
							value: null
						}
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: titleFontColor
							type: COLOR
							value: null
						}
						{
							name: pickerStyle
							type: TEXT
							value: ""
						}
						{
							name: stageBackground
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: titleFont
						type: FONT
						value: null
					}
					{
						name: background
						type: DRAWABLE
						value: null
					}
					{
						name: titleFontColor
						type: COLOR
						value: null
					}
					{
						name: pickerStyle
						type: TEXT
						value: ""
					}
					{
						name: stageBackground
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.toast.Toast$ToastStyle
			displayName: ToastStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: closeButtonStyle
							type: TEXT
							value: ""
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: background
						type: DRAWABLE
						value: null
					}
					{
						name: closeButtonStyle
						type: TEXT
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.BusyBar$BusyBarStyle
			displayName: BusyBarStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: height
							type: NUMBER
							value: 5
						}
						{
							name: segment
							type: DRAWABLE
							value: null
						}
						{
							name: segmentWidth
							type: NUMBER
							value: 150
						}
						{
							name: segmentOverflow
							type: NUMBER
							value: 10
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: height
						type: NUMBER
						value: null
					}
					{
						name: segment
						type: DRAWABLE
						value: null
					}
					{
						name: segmentWidth
						type: NUMBER
						value: null
					}
					{
						name: segmentOverflow
						type: NUMBER
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.widget.ListViewStyle
			displayName: ListViewStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: scrollPaneStyle
							type: TEXT
							value: ""
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: scrollPaneStyle
						type: TEXT
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.util.form.SimpleFormValidator$FormValidatorStyle
			displayName: FormValidatorStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: errorLabelColor
							type: COLOR
							value: null
						}
						{
							name: validLabelColor
							type: COLOR
							value: null
						}
						{
							name: colorTransitionDuration
							type: NUMBER
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: errorLabelColor
						type: COLOR
						value: null
					}
					{
						name: validLabelColor
						type: COLOR
						value: null
					}
					{
						name: colorTransitionDuration
						type: NUMBER
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
		{
			fullyQualifiedName: com.kotcrab.vis.ui.util.adapter.SimpleListAdapter$SimpleListAdapterStyle
			displayName: SimpleListAdapterStyle
			styles: [
				{
					name: default
					properties: [
						{
							name: background
							type: DRAWABLE
							value: null
						}
						{
							name: selection
							type: DRAWABLE
							value: null
						}
					]
					deletable: false
				}
			]
			templateStyle: {
				name: template
				properties: [
					{
						name: background
						type: DRAWABLE
						value: null
					}
					{
						name: selection
						type: DRAWABLE
						value: null
					}
				]
				deletable: true
			}
			declareAfterUIclasses: false
		}
	]
}
preferences: {
	texture-max-width: {
		class: java.lang.Integer
		value: 1024
	}
	last-directory: {
		class: java.lang.String
		value: E:/workspace/Neon UI/skin-export
	}
	texture-max-height: {
		class: java.lang.Integer
		value: 1024
	}
	id: {
		class: java.lang.Integer
		value: 534437168
	}
	last-import-export-path: {
		class: java.lang.String
		value: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin.json
	}
	export-hex: {
		class: java.lang.Boolean
		value: true
	}
	resources-relative: {
		class: java.lang.Boolean
		value: true
	}
	maxUndos: {
		class: java.lang.Integer
		value: 30
	}
	last-scene-composer-json: {
		class: java.lang.String
		value: C:/Users/miker/Desktop/load-game-menu.json
	}
}
saveFile: C:/Users/miker/Code/project-saul/core/mods/base/ui/skin/menu-skin-composer-project.scmp
version: 52
sceneComposer: {
	children: [
		{
			class: com.ray3k.skincomposer.dialog.scenecomposer.DialogSceneComposerModel$SimTable
			cells: [
				{
					child: {
						class: com.ray3k.skincomposer.dialog.scenecomposer.DialogSceneComposerModel$SimLabel
						name: null
						style: {
							name: title_ribbon
							clazz: com.badlogic.gdx.scenes.scene2d.ui.Label
							properties: {
								font: {
									type: com.badlogic.gdx.graphics.g2d.BitmapFont
									name: font
									optional: false
									value: header-font-65
								}
								fontColor: {
									type: com.badlogic.gdx.graphics.Color
									name: fontColor
									optional: true
									value: primary_font_colour_red
								}
								background: {
									type: com.badlogic.gdx.scenes.scene2d.utils.Drawable
									name: background
									optional: true
									value: title_ribbon_bg_mike_10patch
								}
							}
							deletable: true
							parent: null
						}
						text: Lorem ipsum
						textAlignment: 1
						ellipsis: false
						ellipsisString: ...
						wrap: false
						color: null
						touchable: enabled
						visible: true
					}
					row: 0
					column: 0
					padLeft: 0
					padRight: 0
					padTop: 0
					padBottom: 0
					spaceLeft: 0
					spaceRight: 0
					spaceTop: 0
					spaceBottom: 0
					expandX: false
					expandY: false
					fillX: false
					fillY: false
					growX: false
					growY: false
					alignment: 1
					minWidth: -1
					minHeight: -1
					maxWidth: 573
					maxHeight: 111
					preferredWidth: -1
					preferredHeight: -1
					uniformX: false
					uniformY: false
					colSpan: 1
				}
			]
			name: null
			background: null
			color: null
			padLeft: 0
			padRight: 0
			padTop: 0
			padBottom: 0
			paddingEnabled: false
			alignment: 1
			fillParent: true
			touchable: childrenOnly
			visible: true
		}
	]
	backgroundColor: null
	skinPath: skin.json
	packageString: com.mygdx.game
	classString: Core
}
}